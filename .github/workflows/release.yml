name: Protoss CI

on:
  push:
    # tags: ['[0-9].[0-9].[0-9]']
    branches:
      - release-ci

jobs:
  protoss_release:
    name: Protoss Release
    runs-on: ubuntu-latest

    steps:
    - name: Tag Version
      id: tag
      run: echo ::set-output name=tag::${GITHUB_REF#refs/tags/}

    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.12

    - name: Installing Deps
      run: |
        sudo apt-get update -q
        sudo apt-get install -y git wget unzip

    # - uses: Swatinem/rust-cache@v2
    #   with:
    #     cache-on-failure: true
    # TBD

    - name: Getting Protoss
      run: |
        git clone https://github.com/deepcontracts/protoss.git

    - name: Getting Protoc
      run: |
        wget https://github.com/protocolbuffers/protobuf/releases/download/v3.20.3/protoc-3.20.3-linux-x86_64.zip -O protoc.zip
        unzip protoc.zip -d protoc-3.20.3-linux-x86_64
        sudo cp protoc-3.20.3-linux-x86_64/bin/protoc /usr/bin/
        sudo chmod +x /usr/bin/protoc

        mkdir -p tools/
        cp -r protoc-3.20.3-linux-x86_64/include tools/

    - name: Clone and Checkout Cosmos SDK
      run: |
        git clone https://github.com/cosmos/cosmos-sdk.git
        cd cosmos-sdk
        git checkout v0.46.13

    - name: Clone and Checkout Cosmos-Proto
      run: |
        git clone https://github.com/cosmos/cosmos-proto.git
        cd cosmos-proto
        git checkout v1.0.0-alpha8

    - name: Clone and Checkout Gogoproto
      run: |
        git clone https://github.com/cosmos/gogoproto.git
        cd gogoproto
        git checkout v1.4.2

    - name: Building Protoss
      run: |
        cd protoss
        cargo build

    - name: Generate Python-protoc files
      run: |
        cd protoss
        protoc -I../tools/include -I../cosmos-sdk/proto -I../cosmos-proto/proto -I../gogoproto --python_out=lib/py/ gogoproto/gogo.proto cosmos/base/v1beta1/coin.proto cosmos_proto/cosmos.proto cosmos/tx/v1beta1/tx.proto google/protobuf/any.proto cosmos/crypto/multisig/v1beta1/multisig.proto cosmos/tx/signing/v1beta1/signing.proto cosmos/bank/v1beta1/tx.proto cosmos/bank/v1beta1/bank.proto cosmos/msg/v1/msg.proto

    - name: Create Release Files
      run: |
        cd protoss
        tar -czvf protoss-py-lib-linux_amd64.tar.gz lib/
        tar -czvf libprotoss-so-linux_amd64.tar.gz target/debug/libprotoss.so


    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          protoss/protoss-py-lib-linux_amd64.tar.gz
          protoss/libprotoss-so-linux_amd64.tar.gz
        title: Protoss Release Version ${{ steps.tag.outputs.tag }}
        body: Protoss Release Version ${{ steps.tag.outputs.tag }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Protoss Py Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: protoss/protoss-py-lib-linux_amd64.tar.gz
        asset_name: protoss-py-lib-linux_amd64.tar.gz
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload libprotoss.so Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: protoss/libprotoss-so-linux_amd64.tar.gz
        asset_name: libprotoss-so-linux_amd64.tar.gz
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
